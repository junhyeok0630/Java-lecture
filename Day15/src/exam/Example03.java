package exam;

public class Example03 {
	/*
	 * 추상클래스와 추상메소드
	 * - 다형성을 위해 메소드의 선언은 통일해야 하지만 실제로 구현하는 내용은 
	 * 자식 클래스마다 달라야 할 때 부모 클래스의 메소드는 비워두고
	 * 자식클래스에서 오버라이딩 하여 구현해 낼 수 있다.
	 * 
	 * 추상메소드
	 * - 선언부만 작성하고 구현부는 작성하지 않고 남겨둔 미완성 메소드
	 * - 추상메소드를 선언할 때는 abstract 키워드를 함께 표기해야 한다.
	 * - 메소드 구현부인 중괄호 대신 구현부가 없다는 의미로 선언부 끝에 
	 * 세미클론(;)을 사용
	 * - 1개 이상의 추상메소드를 선언 시 그 클래스는 추상 클래스로 
	 * 선언되어야 한다.
	 * 형식)
	 * abstract void 메소드명();
	 * 
	 * 추상클래스 
	 * - 자바에서는 하나 이상의 추상 메소드를 포함하는 클래스를 가리켜
	 * 추상 클래스라 한다.
	 * - 추상 클래스는 추상 메소드를 포함하고 있다는 것을 제외하고는 일반 
	 * 클래스와 다르지 않다.
	 * - 추상 클래스에도 생성자가 있고, 멤버변수와 메소드도 가질 수 있다.
	 * - 일반 클래스처럼 독립적으로 생성자를 호출해 객체를 생성할 수 없다.
	 * - 자식 클래스의 생성자에서 super()를 통해 추상 클래스의 생성자를 
	 * 호출하여 부모 객체를 생성한 후 자식 객체를 생성한다.
	 * - 추상 클래스를 상속받은 자식 클래스는 반드시 추상 메소드를 오버라이딩 
	 * 해야 한다.
	 * 
	 * 형식
	 * abstract class 클래스이름 {
	 * 		// 필드, 생성자, 메소드(추상 메소드 포함)
	 * }
	 */
}
